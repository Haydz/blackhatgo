package main

import (
	"encoding/json"
	"fmt"
	"net"
	"os"
)

type Results struct {
	ID int
	//Command string
	Output string
}

func main() {
	arguments := os.Args
	if len(arguments) == 1 {
		fmt.Println("Please provide port number")
		return
	}

	PORT := ":" + arguments[1]
	l, err := net.Listen("tcp", PORT)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer l.Close()

	c, err := l.Accept()
	if err != nil {
		fmt.Println(err)
		return
	}

	outputTest := Results{
		ID:     1, // TODO: need to make this random for multiple children
		Output: "TESTING:",
	}

	//fmt.Fprintf(c, text+"\n")
	encoder := json.NewEncoder(c)
	encoder.Encode(outputTest)

	// decoder := json.NewDecoder(c)
	// var unmarshalTest Results
	// // s := string(buf[:len])
	// decoder.Decode(&unmarshalTest)
	// // json.Unmarshal(buf[:len], &unmarshalTest)
	// // fmt.Println("->", s)
	// //fmt.Println("len", binary.Size(buf))
	// // fmt.Println("ID->", unmarshalTest.Id)
	// fmt.Println(unmarshalTest.Output)

}
